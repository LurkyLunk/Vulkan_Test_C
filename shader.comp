#version 450

layout( local_size_x = 500, local_size_y = 1, local_size_z = 1 ) in;

layout( binding = 0 ) buffer inputBuffer
{
    uvec4 valuesIn[2][2500];
};

layout( binding = 1 ) buffer outputBuffer
{
    uint valuesOut[1];
};

layout( binding = 2 ) uniform inputBuffer1
{
    uvec4 valuesIn1[2500];
};

layout( binding = 3 ) uniform inputBuffer2
{
    uvec4 valuesIn2[2500];
};

uint processItems(uvec4 item1, uvec4 item2)
{
    mat4 value = outerProduct(item1, item2);
    vec4 maxValue = max(value[1], value[0]);
    maxValue = max(maxValue, value[2]);
    maxValue = max(maxValue, value[3]);
    vec2 result2 = max(maxValue.rg, maxValue.ba);
    float result1 = max(result2[0], result2[1]);
    return uint(result1);
}

shared uint sharedResults[4];

void main()
{
    uint indexToSharedResults = gl_LocalInvocationID.x & 3;
    sharedResults[indexToSharedResults] = 0;

//    memoryBarrierShared();

    uint index = gl_LocalInvocationID.x + gl_WorkGroupID.x * 500;
    uint result = processItems(valuesIn1[index], valuesIn2[gl_WorkGroupID.y]);

    atomicMax(sharedResults[indexToSharedResults], result);

//    barrier();

    if (gl_LocalInvocationID.x == 0)
    {
        uint maxResult = max(sharedResults[0], sharedResults[1]);
        maxResult = max(maxResult, sharedResults[2]);
        maxResult = max(maxResult, sharedResults[3]);

        atomicMax(valuesOut[0], maxResult);
    }
}
